from django.http import JsonResponse
from .models import Schedule, Announcement
from rest_framework.authtoken.models import Token

def check_token(request):
    auth_token = request.headers.get("token")
    if not auth_token:
        return JsonResponse({"error": "Token not provided"}, status=401)

    try:
        token = Token.objects.get(key=auth_token)
        user = token.user
    except Token.DoesNotExist:
        return JsonResponse({"error": "Invalid token"}, status=401)

    return user

def get_schedules(request):
    if request.method == "GET":
        # 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        user = check_token(request)
        # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ JsonResponse (–æ—à–∏–±–∫–∞), –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ—ë
        if isinstance(user, JsonResponse):
            return user

        # 2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        schedules = Schedule.objects.all()
        data = []

        for schedule in schedules:
            data.append({
                'group': schedule.group.first().name if schedule.group.exists() else None,
                'teacher': schedule.teacher,
                'book': schedule.book,
                "time": schedule.time if schedule.time else [],
            })

        # 3Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç
        return JsonResponse(data, safe=False)



def get_all_announcements(request):
    if request.method == "GET":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        user = check_token(request)
        if isinstance(user, JsonResponse):
            return user  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π

        # üîπ –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        announcements = Announcement.objects.all()
        data = []

        for announcement in announcements:
            data.append({
                "title": {
                    "taj": announcement.title_taj,
                    "rus": announcement.title_rus,
                    "eng": announcement.title_eng,
                    "kor": announcement.title_kor
                },
                "content": {
                    "taj": announcement.content_taj,
                    "rus": announcement.content_rus,
                    "eng": announcement.content_eng,
                    "kor": announcement.content_kor
                },
                # –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–æ–ª–µ images —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º–æ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, list –∏–ª–∏ str)
                "images": announcement.images,
                "time_posted": announcement.time_posted.strftime("%Y-%m-%d %H:%M:%S"),
                "author": announcement.author,
                "is_active": announcement.is_active,
                "custom_id": announcement.custom_id,
            })

        return JsonResponse(data, safe=False)



# def get_all_announcements(request):
#     if request.method == "GET":
#         # token = check_token(request)
#         # if token:
#         # Assuming you have a model named AnnouncementImage with a field 'image'
#         announcements = Announcement.objects.all()
#         data = []

#         for announcement in announcements:
#             data.append({
#                 "title": {
#                     "taj": announcement.title_taj,
#                     "rus": announcement.title_rus,
#                     "eng": announcement.title_eng,
#                     "kor": announcement.title_kor
#                 },
#                 "content": {
#                     "taj": announcement.content_taj,
#                     "rus": announcement.content_rus,
#                     "eng": announcement.content_eng,
#                     "kor": announcement.content_kor
#                 },
#                 "images": announcement.images,
#                 "time_posted": announcement.time_posted.strftime("%Y-%m-%d %H:%M:%S"),
#                 "author": announcement.author,
#                 "is_active": announcement.is_active,
#                 "custom_id": announcement.custom_id,
#             })
            
#         return JsonResponse(data, safe=False)